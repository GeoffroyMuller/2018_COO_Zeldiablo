@startuml
interface DessinJeu [[java:moteur.DessinJeu]] {
	void dessiner(BufferedImage image)
}

class Vide [[java:zeldiablo.Vide]] {
	+boolean estTraversable()
	+Vide()
	+String getType()
}

class Case [[java:zeldiablo.Case]] {
}

Case <|-- Vide

class Commande [[java:moteur.Commande]] {
	+boolean gauche
	+boolean droite
	+boolean haut
	+boolean bas
	+Commande()
	+Commande(Commande commandeACopier)
}

class MoteurGraphique [[java:moteur.MoteurGraphique]] {
	+MoteurGraphique(Jeu pJeu, DessinJeu pAffiche)
	+void lancerJeu(int width, int height)
}
class Jeu [[java:moteurJeu.Jeu]] {
}
MoteurGraphique --> "1" Jeu : jeu
class InterfaceGraphique [[java:moteurJeu.InterfaceGraphique]] {
}
MoteurGraphique --> "1" InterfaceGraphique : gui
class DessinJeu [[java:moteurJeu.DessinJeu]] {
}
MoteurGraphique --> "1" DessinJeu : dessin
class Controleur [[java:moteur.Controleur]] {
	+Controleur()
	+Commande getCommande()
	+void keyPressed(KeyEvent e)
	+void keyReleased(KeyEvent e)
	+void keyTyped(KeyEvent e)
}
class Commande [[java:moteurJeu.Commande]] {
}
Controleur --> "1" Commande : commandeEnCours
class Commande [[java:moteurJeu.Commande]] {
}
Controleur --> "1" Commande : commandeARetourner

class InterfaceGraphique [[java:moteur.InterfaceGraphique]] {
	+InterfaceGraphique(DessinJeu afficheurUtil, int x, int y)
	+Controleur getControleur()
	+void dessiner()
}
class PanelDessin [[java:moteurJeu.PanelDessin]] {
}
InterfaceGraphique --> "1" PanelDessin : panel
class Controleur [[java:moteurJeu.Controleur]] {
}
InterfaceGraphique --> "1" Controleur : controleur
class Donjon [[java:zeldiablo.Donjon]] {
	~ArrayList<Etage> etages
	-String nom
	+{static}int NUM_ETAGES
	+Donjon(String pnom)
	+ArrayList<Etage> getEtages()
	+String getNom()
}
interface Jeu [[java:moteur.Jeu]] {
	void evoluer(Commande commandeUser)
	boolean etreFini()
}
class Entree [[java:zeldiablo.Entree]] {
	+Entree()
	+Entree(Salle s)
	+boolean estTraversable()
	+Salle getSallePrecedente()
	+void setSallePrecedente(Salle sallePrecedente)
	+String getType()
}
class Salle [[java:zeldiablo.Salle]] {
}
Entree --> "1" Salle : sallePrecedente
class Case [[java:zeldiablo.Case]] {
}
Case <|-- Entree
class ZeldiabloJeu [[java:zeldiablo.ZeldiabloJeu]] {
	+ZeldiabloJeu()
	+void evoluer(Commande commandeUser)
	+void changementEtage()
	+boolean etreFini()
	+Aventurier getAv()
	+Donjon getDj()
}
class Aventurier [[java:zeldiablo.Aventurier]] {
}
ZeldiabloJeu --> "1" Aventurier : av
class Donjon [[java:zeldiablo.Donjon]] {
}
ZeldiabloJeu --> "1" Donjon : dj
interface Jeu [[java:moteurJeu.Jeu]] {
}
Jeu <|.. ZeldiabloJeu
class Salle [[java:zeldiablo.Salle]] {
	+{static}int TAILLE_SALLES
	+Entree getEntree()
	+void setEntree(Entree entree)
	+Sortie getSortie()
	+void setSortie(Sortie sortie)
	+Salle()
	+String toString()
	+Case[][] getGrille()
	+Coordonnee placerSurMurAlea()
}
class Entree [[java:zeldiablo.Entree]] {
}
Salle --> "1" Entree : entree
class Sortie [[java:zeldiablo.Sortie]] {
}
Salle --> "1" Sortie : Sortie

class Aventurier [[java:zeldiablo.Aventurier]] {
	-int vie
	-boolean mort
	-Image texture
	+Image getTexture()
	+void setTexture(Image texture)
	+Aventurier()
	+Aventurier(Coordonnee c, Salle l, Etage et)
	+void setSalle(Salle salle)
	+void setEtage(Etage etage)
	+Salle getSalle()
	+Etage getEtage()
	+void soigner(int pv)
	+void modifierVie(int pv)
	+void subirDegats(int pv)
	+boolean deplacerAventurier(Coordonnee c)
	+void changerCoord(Coordonnee c)
	+boolean enVie()
	+int getVie()
	+void setVie(int vie)
	+boolean isMort()
	+void setMort(boolean mort)
	+Coordonnee getCoor()
	+void setCoor(Coordonnee coor)
	+Case getCase()
	+void changementSalle(Salle s, Case c)
}
class Coordonnee [[java:zeldiablo.Coordonnee]] {
}
Aventurier --> "1" Coordonnee : coor
class Salle [[java:zeldiablo.Salle]] {
}
Aventurier --> "1" Salle : salle
class Etage [[java:zeldiablo.Etage]] {
}
Aventurier --> "1" Etage : etage
class Sortie [[java:zeldiablo.Sortie]] {
	+void setSalleSuivante(Salle salleSuivante)
	+Sortie()
	+Sortie(Salle s)
	+Salle getSalleSuivante()
	+boolean estTraversable()
	+String getType()
}
class Salle [[java:zeldiablo.Salle]] {
}
Sortie --> "1" Salle : salleSuivante
class Case [[java:zeldiablo.Case]] {
}
Case <|-- Sortie
class Zone [[java:zeldiablo.Zone]] {
	+{static}int TAILLE_ZONE
	-String nomZone
	+Zone(String pNom)
	+Case[][] getGrilleZone()
}

Zone --> "*" Case : grilleZone
class ZeldiabloDessin [[java:zeldiablo.ZeldiabloDessin]] {
	+{static}int TAILLE
	+ZeldiabloDessin(ZeldiabloJeu j)
	+void dessiner(BufferedImage image)
}
class ZeldiabloJeu [[java:zeldiablo.ZeldiabloJeu]] {
}
ZeldiabloDessin --> "1" ZeldiabloJeu : jeu
interface DessinJeu [[java:moteurJeu.DessinJeu]] {
}
DessinJeu <|.. ZeldiabloDessin
abstract class Case [[java:zeldiablo.Case]] {
	#Image texture
	+Image getTexture()
	+void setTexture(Image texture)
	+Case()
	+{abstract}boolean estTraversable()
	+{abstract}String getType()
	+String toString()
}
class Coordonnee [[java:zeldiablo.Coordonnee]] {
	-int x
	-int y
	+Coordonnee(int cX, int cY)
	+int getX()
	+void setX(int x)
	+int getY()
	+void setY(int y)
	+void incrementerX()
	+void incrementerY()
	+void decrementerX()
	+void decrementerY()
	+void dupliquerCoordonnee(Coordonnee c)
	+String toString()
}
class Mur [[java:zeldiablo.Mur]] {
	+boolean estTraversable()
	+Mur()
	+String getType()
}
class Case [[java:zeldiablo.Case]] {
}
Case <|-- Mur
class Etage [[java:zeldiablo.Etage]] {
	-int numetage
	+{static}int NUM_SALLES
	+Etage(int pnum)
	+int getNumetage()
	+ArrayList<Salle> getSalles()
}
class PanelDessin [[java:moteur.PanelDessin]] {
	-BufferedImage imageSuivante
	-BufferedImage imageEnCours
	-int width
	-int height
	+PanelDessin(int x, int y, DessinJeu affiche)
	+void dessinerJeu()
	+void paint(Graphics g)
}
class DessinJeu [[java:moteurJeu.DessinJeu]] {
}
PanelDessin --> "1" DessinJeu : dessin
class JPanel [[java:javax.swing.JPanel]] {
}
JPanel <|-- PanelDessin
class Principale [[java:principal.Principale]] {
	+{static}void main(String[] args)
}
class Escalier [[java:zeldiablo.Escalier]] {
	+boolean estTraversable()
	+String getType()
}
class Case [[java:zeldiablo.Case]] {
}
Case <|-- Escalier
Salle --> "*" Case : grille
Etage --> "*" Salle : salles
Donjon --> "*" Etage : etages
@enduml